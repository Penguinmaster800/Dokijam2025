[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://byar7cuw2sr0a"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_26nec"]
parameter_name = "tint"
default_value_enabled = true

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_4opve"]
parameter_name = "enabled"
default_value_enabled = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_m8fvu"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_bbtd1"]
input_name = "color"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool enabled = false;
uniform vec4 tint : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);



void fragment() {
// BooleanParameter:3
	bool n_out3p0 = enabled;


// ColorParameter:2
	vec4 n_out2p0 = tint;


// Input:5
	vec4 n_out5p0 = COLOR;


	vec3 n_out4p0;
// If:4
	float n_in4p1 = 0.00000;
	float n_in4p2 = 0.00001;
	if(abs((n_out3p0 ? 1.0 : 0.0) - n_in4p1) < n_in4p2)
	{
		n_out4p0 = vec3(n_out2p0.xyz);
	}
	else if((n_out3p0 ? 1.0 : 0.0) < n_in4p1)
	{
		n_out4p0 = vec3(n_out5p0.xyz);
	}
	else
	{
		n_out4p0 = vec3(n_out5p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out4p0;


}
"
graph_offset = Vector2(-265.16, -253.57)
mode = 1
flags/light_only = false
preview_params/enabled = "false"
nodes/fragment/0/position = Vector2(900, 220)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_26nec")
nodes/fragment/2/position = Vector2(-180, 260)
nodes/fragment/3/node = SubResource("VisualShaderNodeBooleanParameter_4opve")
nodes/fragment/3/position = Vector2(-240, -220)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_m8fvu")
nodes/fragment/4/position = Vector2(480, -160)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_bbtd1")
nodes/fragment/5/position = Vector2(-260, 740)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 2, 0, 4, 3, 4, 0, 0, 0, 5, 0, 4, 4, 5, 0, 4, 5)
